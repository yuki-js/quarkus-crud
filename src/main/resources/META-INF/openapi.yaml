openapi: 3.0.3
info:
  title: Quarkus CRUD API
  description: |
    Guest User Authentication API with CRUD operations for rooms.
    This API provides anonymous guest user authentication using cookies and real-time updates via Server-Sent Events.
  version: 0.0.1
  contact:
    name: API Support
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.example.com
    description: Production server

tags:
  - name: Authentication
    description: Guest user authentication operations
  - name: Rooms
    description: Room CRUD operations
  - name: Live
    description: Real-time updates via Server-Sent Events

paths:
  /api/auth/guest:
    post:
      tags:
        - Authentication
      summary: Create a guest user
      description: Creates an anonymous guest user and sets a cookie with the guest token
      operationId: createGuestUser
      responses:
        '200':
          description: Guest user created successfully
          headers:
            Set-Cookie:
              description: HttpOnly cookie containing the guest token
              schema:
                type: string
                example: guest_token=<token>; Path=/; Max-Age=31536000; HttpOnly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              example:
                id: 1
                createdAt: "2025-10-29T18:00:00"

  /api/auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user
      description: Retrieves the current user information from the guest token cookie
      operationId: getCurrentUser
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              example:
                id: 1
                createdAt: "2025-10-29T18:00:00"
        '401':
          description: Unauthorized - No guest token found or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                noToken:
                  summary: No token provided
                  value:
                    error: "No guest token found"
                invalidToken:
                  summary: Invalid token
                  value:
                    error: "Invalid guest token"

  /api/rooms:
    post:
      tags:
        - Rooms
      summary: Create a room
      description: Creates a new room for the authenticated user
      operationId: createRoom
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoomRequest'
            example:
              name: "My Room"
              description: "A sample room"
      responses:
        '201':
          description: Room created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomResponse'
              example:
                id: 1
                name: "My Room"
                description: "A sample room"
                userId: 1
                createdAt: "2025-10-29T18:00:00"
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                authRequired:
                  summary: No authentication provided
                  value:
                    error: "Authentication required"
                invalidAuth:
                  summary: Invalid authentication
                  value:
                    error: "Invalid authentication"

    get:
      tags:
        - Rooms
      summary: Get all rooms
      description: Retrieves all rooms in the system
      operationId: getAllRooms
      responses:
        '200':
          description: List of all rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomResponse'
              example:
                - id: 1
                  name: "My Room"
                  description: "A sample room"
                  userId: 1
                  createdAt: "2025-10-29T18:00:00"

  /api/rooms/{id}:
    get:
      tags:
        - Rooms
      summary: Get room by ID
      description: Retrieves a specific room by ID
      operationId: getRoomById
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Room details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomResponse'
              example:
                id: 1
                name: "My Room"
                description: "A sample room"
                userId: 1
                createdAt: "2025-10-29T18:00:00"
        '404':
          description: Room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Room not found"

    put:
      tags:
        - Rooms
      summary: Update a room
      description: Updates an existing room (only the owner can update)
      operationId: updateRoom
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoomRequest'
            example:
              name: "Updated Room"
              description: "Updated description"
      responses:
        '200':
          description: Room updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomResponse'
              example:
                id: 1
                name: "Updated Room"
                description: "Updated description"
                userId: 1
                createdAt: "2025-10-29T18:00:00"
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                authRequired:
                  summary: No authentication provided
                  value:
                    error: "Authentication required"
                invalidAuth:
                  summary: Invalid authentication
                  value:
                    error: "Invalid authentication"
        '403':
          description: Forbidden - User does not have permission to update this room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "You don't have permission to update this room"
        '404':
          description: Room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Room not found"

    delete:
      tags:
        - Rooms
      summary: Delete a room
      description: Deletes a room (only the owner can delete)
      operationId: deleteRoom
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          description: Room ID
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: Room deleted successfully
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                authRequired:
                  summary: No authentication provided
                  value:
                    error: "Authentication required"
                invalidAuth:
                  summary: Invalid authentication
                  value:
                    error: "Invalid authentication"
        '403':
          description: Forbidden - User does not have permission to delete this room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "You don't have permission to delete this room"
        '404':
          description: Room not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Room not found"

  /api/rooms/my:
    get:
      tags:
        - Rooms
      summary: Get my rooms
      description: Retrieves all rooms created by the authenticated user
      operationId: getMyRooms
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of user's rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomResponse'
              example:
                - id: 1
                  name: "My Room"
                  description: "A sample room"
                  userId: 1
                  createdAt: "2025-10-29T18:00:00"
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                authRequired:
                  summary: No authentication provided
                  value:
                    error: "Authentication required"
                invalidAuth:
                  summary: Invalid authentication
                  value:
                    error: "Invalid authentication"

  /api/live/rooms:
    get:
      tags:
        - Live
      summary: Subscribe to live room updates
      description: |
        Subscribe to real-time room updates via Server-Sent Events. 
        Clients can subscribe to this endpoint to receive live notifications when rooms are created, updated, or deleted.
        The connection stays open and events are sent as they occur.
      operationId: streamRoomEvents
      responses:
        '200':
          description: Server-Sent Events stream
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/RoomEventResponse'
              example: |
                data: {"eventType":"ROOM_CREATED","roomId":1,"name":"My Room","description":"A sample room","userId":1,"timestamp":"2025-10-30T12:00:00"}

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: guest_token
      description: Guest authentication token stored in HttpOnly cookie

  schemas:
    UserResponse:
      type: object
      description: User information response. Note that guestToken is NOT included for security - it's only in the cookie.
      required:
        - id
        - createdAt
      properties:
        id:
          type: integer
          format: int64
          description: User ID
          example: 1
        createdAt:
          type: string
          format: date-time
          description: When the user was created
          example: "2025-10-29T18:00:00"

    CreateRoomRequest:
      type: object
      description: Request payload for creating a room
      required:
        - name
        - description
      properties:
        name:
          type: string
          description: Room name
          minLength: 1
          maxLength: 255
          example: "My Room"
        description:
          type: string
          description: Room description
          example: "A sample room"

    UpdateRoomRequest:
      type: object
      description: Request payload for updating a room
      required:
        - name
        - description
      properties:
        name:
          type: string
          description: Updated room name
          minLength: 1
          maxLength: 255
          example: "Updated Room"
        description:
          type: string
          description: Updated room description
          example: "Updated description"

    RoomResponse:
      type: object
      description: Room information response
      required:
        - id
        - name
        - description
        - userId
        - createdAt
      properties:
        id:
          type: integer
          format: int64
          description: Room ID
          example: 1
        name:
          type: string
          description: Room name
          example: "My Room"
        description:
          type: string
          description: Room description
          example: "A sample room"
        userId:
          type: integer
          format: int64
          description: ID of the user who created the room
          example: 1
        createdAt:
          type: string
          format: date-time
          description: When the room was created
          example: "2025-10-29T18:00:00"

    RoomEventResponse:
      type: object
      description: Room event for Server-Sent Events
      required:
        - eventType
        - roomId
        - name
        - description
        - userId
        - timestamp
      properties:
        eventType:
          type: string
          description: Type of event
          enum:
            - ROOM_CREATED
            - ROOM_UPDATED
            - ROOM_DELETED
          example: "ROOM_CREATED"
        roomId:
          type: integer
          format: int64
          description: Room ID
          example: 1
        name:
          type: string
          description: Room name
          example: "My Room"
        description:
          type: string
          description: Room description
          example: "A sample room"
        userId:
          type: integer
          format: int64
          description: ID of the user who owns the room
          example: 1
        timestamp:
          type: string
          format: date-time
          description: When the event occurred
          example: "2025-10-30T12:00:00"

    ErrorResponse:
      type: object
      description: Error response format
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
          example: "Authentication required"
